var sqlSelect = sqlQuery.select();
 
sqlSelect
  .from('table1')
  .where()
  .build();
 
"SELECT * FROM `table1`"
 
 
sqlSelect
  .from('table1')
  .where(null)
  .build();
 
"SELECT * FROM `table1`"
 
 
sqlSelect
  .from('table1')
  .where({ col: 1 })
  .build();
 
"SELECT * FROM `table1` WHERE `col` = 1"
 
 
sqlSelect
  .from('table1')
  .where({ col: 0 })
  .build();
 
"SELECT * FROM `table1` WHERE `col` = 0"
 
 
sqlSelect
  .from('table1')
  .where({ col: null })
  .build();
 
"SELECT * FROM `table1` WHERE `col` IS NULL"
 
 
sqlSelect
  .from('table1')
  .where({ col: sql.eq(null) })
  .build();
 
"SELECT * FROM `table1` WHERE `col` IS NULL"
 
 
sqlSelect
  .from('table1')
  .where({ col: sql.ne(null) })
  .build();
 
"SELECT * FROM `table1` WHERE `col` IS NOT NULL"
 
 
sqlSelect
  .from('table1')
  .where({ col: undefined })
  .build();
 
"SELECT * FROM `table1` WHERE `col` IS NULL"
 
 
sqlSelect
  .from('table1')
  .where({ col: false })
  .build();
 
"SELECT * FROM `table1` WHERE `col` = false"
 
 
sqlSelect
  .from('table1')
  .where({ col: "" })
  .build();
 
"SELECT * FROM `table1` WHERE `col` = ''"
 
 
sqlSelect
  .from('table1')
  .where({ col: true })
  .build();
 
"SELECT * FROM `table1` WHERE `col` = true"
 
 
sqlSelect
  .from('table1')
  .where({ col: 'a' })
  .build();
 
"SELECT * FROM `table1` WHERE `col` = 'a'"
 
 
sqlSelect
  .from('table1')
  .where({ col: 'a\'' })
  .build();
 
"SELECT * FROM `table1` WHERE `col` = 'a\\''"
 
 
sqlSelect
  .from('table1')
  .where({ col: [ 1, 2, 3 ] })
  .build();
 
"SELECT * FROM `table1` WHERE `col` IN (1, 2, 3)"
 
 
sqlSelect
  .from('table1')
  .where({ col: [] })
  .build();
 
"SELECT * FROM `table1` WHERE FALSE"
 
 
sqlSelect
  .from('table1')
  .where({ col1: 1, col2: 2 })
  .build();
 
"SELECT * FROM `table1` WHERE `col1` = 1 AND `col2` = 2"
 
 
sqlSelect
  .from('table1')
  .where({ col1: 1 }, { col2: 2 })
  .build();
 
"SELECT * FROM `table1` WHERE (`col1` = 1) AND (`col2` = 2)"
 
 
sqlSelect
  .from('table1')
  .where({ col: 1 }).where({ col: 2 })
  .build();
 
"SELECT * FROM `table1` WHERE (`col` = 1) AND (`col` = 2)"
 
 
sqlSelect
  .from('table1')
  .where({ col1: 1, col2: 2 }).where({ col3: 3 })
  .build();
 
"SELECT * FROM `table1` WHERE (`col1` = 1 AND `col2` = 2) AND (`col3` = 3)"
 
 
sqlSelect
  .from('table1')
  .from('table2', 'id', 'id')
  .where('table1', { col: 1 }, 'table2', { col: 2 })
  .build();
 
"SELECT * FROM `table1` `t1` JOIN `table2` `t2` ON `t2`.`id` = `t1`.`id` WHERE (`t1`.`col` = 1) AND (`t2`.`col` = 2)"
 
 
sqlSelect
  .from('table1')
  .from('table2', 'id', 'id')
  .where('table1', { col: 1 }, { col: 2 })
  .build();
 
"SELECT * FROM `table1` `t1` JOIN `table2` `t2` ON `t2`.`id` = `t1`.`id` WHERE (`t1`.`col` = 1) AND (`col` = 2)"
 
 
sqlSelect
  .from('table1')
  .where({ col: sql.gt(1) })
  .build();
 
"SELECT * FROM `table1` WHERE `col` > 1"
 
 
sqlSelect
  .from('table1')
  .where({ col: sql.gte(1) })
  .build();
 
"SELECT * FROM `table1` WHERE `col` >= 1"
 
 
sqlSelect
  .from('table1')
  .where({ col: sql.lt(1) })
  .build();
 
"SELECT * FROM `table1` WHERE `col` < 1"
 
 
sqlSelect
  .from('table1')
  .where({ col: sql.lte(1) })
  .build();
 
"SELECT * FROM `table1` WHERE `col` <= 1"
 
 
sqlSelect
  .from('table1')
  .where({ col: sql.eq(1) })
  .build();
 
"SELECT * FROM `table1` WHERE `col` = 1"
 
 
sqlSelect
  .from('table1')
  .where({ col: sql.ne(1) })
  .build();
 
"SELECT * FROM `table1` WHERE `col` <> 1"
 
 
sqlSelect
  .from('table1')
  .where({ col: sql.between('a', 'b') })
  .build();
 
"SELECT * FROM `table1` WHERE `col` BETWEEN 'a' AND 'b'"
 
 
sqlSelect
  .from('table1')
  .where({ col: sql.not_between('a', 'b') })
  .build();
 
"SELECT * FROM `table1` WHERE `col` NOT BETWEEN 'a' AND 'b'"
 
 
sqlSelect
  .from('table1')
  .where({ col: sql.like('abc') })
  .build();
 
"SELECT * FROM `table1` WHERE `col` LIKE 'abc'"
 
 
sqlSelect
  .from('table1')
  .where({ col: 
  sql.not_like('abc') })
  .build();
 
"SELECT * FROM `table1` WHERE `col` NOT LIKE 'abc'"
 
 
sqlSelect
  .from('table1')
  .where({ col: sql.not_in([ 1, 2, 3 ]) })
  .build();
 
"SELECT * FROM `table1` WHERE `col` NOT IN (1, 2, 3)"
 
 
sqlSelect
  .from('table1')
  .where({ __sql: [["LOWER(`stuff`) LIKE 'peaches'"]] })
  .build();
 
"SELECT * FROM `table1` WHERE LOWER(`stuff`) LIKE 'peaches'"
 
 
sqlSelect
  .from('table1')
  .where({ __sql: [["LOWER(`stuff`) LIKE ?", ['peaches']]] })
  .build();
 
"SELECT * FROM `table1` WHERE LOWER(`stuff`) LIKE 'peaches'"
 
 
sqlSelect
  .from('table1')
  .where({ __sql: [["LOWER(`stuff`) LIKE ? AND `number` > ?", ['peaches', 12]]] })
  .build();
 
"SELECT * FROM `table1` WHERE LOWER(`stuff`) LIKE 'peaches' AND `number` > 12"
 
 
sqlSelect
  .from('table1')
  .where({ __sql: [["LOWER(`stuff`) LIKE ? AND `number` == ?", ['peaches']]] })
  .build();
 
"SELECT * FROM `table1` WHERE LOWER(`stuff`) LIKE 'peaches' AND `number` == NULL"